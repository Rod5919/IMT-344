# -*- coding: utf-8 -*-
"""Ejercicio3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kl_Zj49Z0pLf-jCv1kJ5Lml1xHKTp2fG

# Problem 3

# Libraries
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import cv2
# %matplotlib inline

"""# Import dataset

>NOTE: Before running notebook, mount drive with your own kaggle.json file
"""

import os
os.environ['KAGGLE_CONFIG_DIR'] = "drive/My Drive/Kaggle"

"""# Preview images"""

filename = '100.png' # You can pick a file from 001.png to 366.png
image = cv2.imread("images/"+filename)

# plt.imshow(image)
# plt.title('Image')

"""# Functions

## Morphological
"""

def morpho(filename):

  # Get image
  image = cv2.imread("images/"+filename)
  grayscale = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

  # Scale image
  scaled_img = cv2.resize(grayscale, (428, 426))

  # 2-bit image
  ret, img_2bit = cv2.threshold(scaled_img,150,200,cv2.THRESH_BINARY_INV)
  img_2bit = np.array(img_2bit)

  s_1 = np.uint8([[0, 0, 1, 0, 0],
                  [0, 0, 1, 0, 0],
                  [1, 1, 1, 1, 1],
                  [0, 0, 1, 0, 0], 
                  [0, 0, 1, 0, 0], 
                  ])

  s_2 = np.uint8([[0, 1, 0],
                  [1, 1, 1],
                  [0, 1, 0]
                  ])

  # Erode the image
  img_cross_ero = cv2.erode(img_2bit, s_1, iterations = 1)

  # Dilate the image
  img_cross_dil = cv2.dilate(img_cross_ero, s_2, iterations = 1)

  # plt.imshow(img_cross_dil, cmap='gray')

  return img_cross_dil

"""## Contour counter"""

def bacterias_res(filename):
  pp_img = morpho(filename)
  contours, hierarchy = cv2.findContours(pp_img, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
  return len(contours)

"""# Creating dataset"""

files = list(range(1,367))
files = [str(x)+'.png' for x in files]
files = ['00'+x if len(x)==5 else x for x in files ]
files = ['0'+x if len(x)==6 else x for x in files ]
# files
conts = [bacterias_res(x) for x in files]
# conts

results = [1 if x>20 else 0 for x in conts]
# results

imgs = [morpho(x) for x in files]

df = pd.DataFrame(zip(files, imgs, conts, results), columns=['Filename', 'Images', 'Contour', 'Contaminated'])
df

plt.bar(['Contaminated','Not contaminated'], [list(df['Contaminated']).count(1), list(df['Contaminated']).count(0)])

"""# Prediction"""

while(1):
  num = int(input('tpe a numer from 0 to 365, -1 to stop')) #@param {type:"slider", min:0, max:365, step:1}

  if num < 0:
    break
  plt.imshow(cv2.imread("images/"+files[num]))
  plt.title({True:'Contaminated', False:'Not contaminated'}[bacterias_res(files[num])>20])